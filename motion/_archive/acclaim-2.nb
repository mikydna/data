(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    492361,       9433]
NotebookOptionsPosition[    489228,       9327]
NotebookOutlinePosition[    489582,       9343]
CellTagsIndexPosition[    489539,       9340]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
http://research.cs.wisc.edu/graphics/Courses/cs-838-1999/Jeff/ASF-AMC.html
http://web.cse.ohio-state.edu/~parent/classes/888/Mocap/ASF.cp
https://github.com/vluzko/mocap/blob/master/pyAcclaim/MotionCapture.py\
\>", "Text",
 CellChangeTimes->{{3.68234754110985*^9, 3.682347543537168*^9}, {
  3.6823636648671007`*^9, 3.682363674479594*^9}, {3.682365638181621*^9, 
  3.682365659578121*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"raw$afs", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/andy/Code/data/motion/cmu/dance/94.asf\>\"", ",", " ", 
     "\"\<String\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"raw$acm", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/andy/Code/data/motion/cmu/dance/94_01.amc\>\"", ",", " ", 
     "\"\<String\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.682343444834629*^9, 3.682343476065287*^9}, {
  3.682354237662434*^9, 3.68235424556879*^9}, {3.682370324192647*^9, 
  3.6823703473665037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68237035154757*^9, 3.68237035663974*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\<\"#!OML:ASF H:\\\\IndianDance\\\\Patient Classification 1\
\\\\Patient 1\\\\Session \
1\\\\dancer.ASF\\r\\n:FULLY-SPECIFIED\\r\\n:DEGREES\\r\\n1\\r\\nroot -30.184 \
12.9578 14.9131 -176.312 -0.0410168 -175.87\\r\\nlowerback 3.45988 0.897008 \
0.924903\\r\\nupperback -6.38405 1.70325 1.04559\"\>", 
          "\[Ellipsis]", "\<\" -31.1676 -347.053\\r\\nlfingers \
7.12502\\r\\nlthumb -4.44496 402.88\\r\\nrfemur -17.9524 -1.19881 \
30.625\\r\\nrtibia 34.6686\\r\\nrfoot -15.2965 -7.53048\\r\\nrtoes 17.4873\\r\
\\nlfemur -17.9479 -0.169313 -10.9664\\r\\nltibia 57.8849\\r\\nlfoot -9.78278 \
5.46941\\r\\nltoes 0.962726\\r\\n\"\>"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 869, 33325943607416338848, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 869, 33325943607416338848, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 869, 33325943607416338848, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[869]]], "Output",
 CellChangeTimes->{3.682370352890613*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ParseAFS", "[", "afs_", "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"splits", "=", 
         RowBox[{"Association", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "->", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;"}], "]"}], "]"}]}], "&"}], "@", 
             RowBox[{"(", 
              RowBox[{"StringTrim", "/@", 
               RowBox[{"StringSplit", "[", 
                RowBox[{"#", ",", "\"\<\\n\>\""}], "]"}]}], ")"}]}], "&"}], 
           "\[IndentingNewLine]", "/@", 
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"afs", ",", "\"\<:\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;"}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "root", ",", 
        "\[IndentingNewLine]", "hierarchy", ",", "\[IndentingNewLine]", 
        "bones", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "render"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"root", "=", "\[IndentingNewLine]", 
        RowBox[{"Block", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"kv", "=", 
            RowBox[{"Association", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"ToExpression", "/@", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;"}], "]"}], "]"}]}], ")"}]}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"StringSplit", "/@", 
                RowBox[{"splits", "[", "\"\<root\>\"", "]"}]}], ")"}]}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
          "\[IndentingNewLine]", "kv"}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"hierarchy", "=", 
        RowBox[{"Block", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"paths", "=", 
             RowBox[{
              RowBox[{"splits", "[", "\"\<hierarchy\>\"", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", 
            "\[IndentingNewLine]", "v", ",", "\[IndentingNewLine]", "graph"}],
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"v", "=", 
            RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"StringTrim", "/@", 
               RowBox[{"(", 
                RowBox[{"StringSplit", "/@", "paths"}], ")"}]}], "]"}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"graph", "=", 
            RowBox[{"Graph", "[", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Block", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"path", "=", 
                    RowBox[{"StringTrim", "/@", 
                    RowBox[{"StringSplit", "[", "#", "]"}]}]}], ",", 
                    "\[IndentingNewLine]", "from", ",", "to"}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{
                    RowBox[{"from", "=", 
                    RowBox[{"path", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"to", "=", 
                    RowBox[{"path", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"from", "\[Rule]", "#"}], "&"}], "/@", "to"}]}]}],
                   "\[IndentingNewLine]", "]"}], "&"}], ",", 
                "\[IndentingNewLine]", "paths"}], "\[IndentingNewLine]", 
               "]"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[GreaterEqual]", 
                   "1"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"{", "\"\<root\>\"", "}"}]}], "]"}]}], "}"}], "&"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"FindPath", "[", 
                  RowBox[{"graph", ",", "\"\<root\>\"", ",", "#"}], "]"}]}], 
                "}"}], "&"}], "/@", "v"}]}], "\[IndentingNewLine]", "]"}]}]}],
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"bones", "=", 
        RowBox[{"Block", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"data", "=", 
            RowBox[{"splits", "[", "\"\<bonedata\>\"", "]"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"begins", " ", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"data", ",", "\"\<begin\>\""}], "]"}], "//", 
                "Flatten"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"ends", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"data", ",", "\"\<end\>\""}], "]"}], "//", 
                "Flatten"}]}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "pos", ",", "\[IndentingNewLine]", 
              "parsed"}], "\[IndentingNewLine]", "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pos", "=", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Riffle", "[", 
                 RowBox[{"begins", ",", "ends"}], "]"}], ",", "2"}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"parsed", "=", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Association", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;"}], "]"}], "]"}]}], "&"}], "@", 
                    RowBox[{"StringSplit", "[", 
                    RowBox[{"#", ",", " ", "Whitespace"}], "]"}]}], ")"}], 
                   "&"}], "/@", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"data", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@",
                  "pos"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
             "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
              "Prepend", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Block", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"id", "=", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<id\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"name", "=", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<name\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"direction", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"length", "=", 
                    RowBox[{"Internal`StringToDouble", "[", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<length\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"axis", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], 
                    "Degree"}], "&"}], "/@", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<axis\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dof", "=", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"#", ",", "\"\<dof\>\""}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                    "\"\<rx\>\""}], "]"}], ",", "1", ",", "0"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                    "\"\<ry\>\""}], "]"}], ",", "1", ",", "0"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                    "\"\<rz\>\""}], "]"}], ",", "1", ",", "0"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "offset", 
                    ",", "\[IndentingNewLine]", "trans", ",", 
                    "\[IndentingNewLine]", "rot"}], "\[IndentingNewLine]", 
                    "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"offset", "=", 
                    RowBox[{"direction", "*", "length"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"trans", "=", 
                    RowBox[{
                    "TransformationMatrix", "[", "\[IndentingNewLine]", 
                    RowBox[{"TranslationTransform", "[", "offset", "]"}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"rot", "=", 
                    RowBox[{"Dot", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "TransformationMatrix", "[", "\[IndentingNewLine]", 
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{
                    RowBox[{"axis", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    "TransformationMatrix", "[", "\[IndentingNewLine]", 
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{
                    RowBox[{"axis", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    "TransformationMatrix", "[", "\[IndentingNewLine]", 
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{
                    RowBox[{"axis", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"name", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<id\>\"", "\[Rule]", "id"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<name\>\"", "\[Rule]", "name"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<direction\>\"", "\[Rule]", "direction"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<length\>\"", "\[Rule]", "length"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<axis\>\"", "\[Rule]", "axis"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<dof\>\"", "\[Rule]", "dof"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<$$offset\>\"", "\[Rule]", "offset"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<$$trans\>\"", "\[Rule]", "trans"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<$$rot\>\"", "\[Rule]", "rot"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<$$rotInv\>\"", "\[Rule]", 
                    RowBox[{"Inverse", "[", "rot", "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}]}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
                   "&"}], ",", "\[IndentingNewLine]", "parsed"}], 
                 "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<root\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{"\"\<$$offset\>\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"\"\<$$trans\>\"", "\[Rule]", " ", 
                    RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ",", 
                   RowBox[{"\"\<$$rot\>\"", "\[Rule]", 
                    RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ",", 
                   RowBox[{"\"\<$$rotInv\>\"", "\[Rule]", 
                    RowBox[{"IdentityMatrix", "[", "4", "]"}]}]}], " ", 
                  "|>"}]}]}], "\[IndentingNewLine]", "]"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"render", "=", "\[IndentingNewLine]", 
        RowBox[{"Association", "[", "\[IndentingNewLine]", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Block", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"name", "=", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"path", "=", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"name", "\[Rule]", 
               RowBox[{"Total", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"bones", "[", "#", "]"}], "[", "\"\<$$offset\>\"",
                     "]"}], "&"}], ",", "path"}], "]"}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
           "hierarchy"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"hierarchy", ",", "bones", ",", "render"}], "}"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.6823542311629972`*^9, 3.682354633336156*^9}, {
   3.682354664928864*^9, 3.682354676784075*^9}, {3.682354729606333*^9, 
   3.6823551575194674`*^9}, {3.682355199425824*^9, 3.682355381745359*^9}, {
   3.682355416517806*^9, 3.682355448056218*^9}, {3.682355543035239*^9, 
   3.682355692362878*^9}, {3.682355728557693*^9, 3.682355856961526*^9}, {
   3.682355890763763*^9, 3.682356038932455*^9}, {3.68235607057084*^9, 
   3.682356406508017*^9}, {3.682356438740738*^9, 3.682356461632214*^9}, {
   3.682356493452663*^9, 3.682356744298324*^9}, {3.682356777990625*^9, 
   3.6823569112465887`*^9}, {3.682356953654543*^9, 3.68235702096*^9}, {
   3.6823570750814543`*^9, 3.682357361566188*^9}, {3.6823574390830584`*^9, 
   3.6823574484961433`*^9}, {3.68235785255027*^9, 3.682357895572809*^9}, {
   3.6823579745724907`*^9, 3.682358024586323*^9}, {3.6823580960499563`*^9, 
   3.682358143400063*^9}, {3.682358176290292*^9, 3.6823582075752563`*^9}, {
   3.68235901883991*^9, 3.682359110739415*^9}, {3.682359150554886*^9, 
   3.682359155340135*^9}, {3.6823594717151403`*^9, 3.682359484107059*^9}, {
   3.682359564184103*^9, 3.682359595896122*^9}, {3.682366298571012*^9, 
   3.682366316311961*^9}, {3.682367547540707*^9, 3.682367645627616*^9}, {
   3.6823677088374453`*^9, 3.682367724449172*^9}, {3.682368121358859*^9, 
   3.682368144060501*^9}, {3.682368182980462*^9, 3.682368355756424*^9}, {
   3.682368385854594*^9, 3.682368407987194*^9}, {3.6823684780020037`*^9, 
   3.682368814199646*^9}, {3.682368844280761*^9, 3.682368849182898*^9}, {
   3.682368883225401*^9, 3.682369101994248*^9}, {3.682369271663958*^9, 
   3.682369277510376*^9}, {3.68236931495947*^9, 3.682369341845606*^9}, {
   3.6824268907991657`*^9, 3.6824268942778797`*^9}, {3.682426974677986*^9, 
   3.682426992612113*^9}, 3.682431285812375*^9, {3.6824331988605328`*^9, 
   3.6824332037500772`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"hierarchy", ",", "bones", ",", "pos"}], "}"}], "=", 
    RowBox[{"ParseAFS", "[", "raw$afs", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Point", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Normal", "[", "pos", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", "]"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
    "Red", ",", "\[IndentingNewLine]", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0935977802365171`"}], ",", "1.7627511757454555`", ",", 
       
       RowBox[{"-", "0.030609949258450453`"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6823683646642942`*^9, 3.68236837269134*^9}, {
   3.682369042420228*^9, 3.682369046142634*^9}, {3.682369111255163*^9, 
   3.6823691440456743`*^9}, {3.682369982823915*^9, 3.682369999705612*^9}, {
   3.682370047937417*^9, 3.682370064869524*^9}, 3.6824188772909193`*^9}],

Cell[BoxData[
 Graphics3DBox[{
   Point3DBox[{{0, 0, 0}, {1.2836631626, -1.5847179901, 
     0.8754403622999999}, {-1.2179465779999998`, -1.584718958, 0.87544022}, {
     0.011796664935000001`, 1.7643047565, -0.06386537355}, {
     3.4695300835999996`, -7.59034293775, 0.8754403622999999}, {
     5.860376431, -14.15914469416, 0.8754403622999999}, {
     5.980409706292, -14.488932599710001`, 2.9064519729700002`}, {
     5.980409706307981, -14.488932599753905`, 
     3.9471919729700002`}, {-3.4450850524, -7.703736659960001, 
     0.87544022}, {-5.8481415138, -14.30608545647, 
     0.87544022}, {-6.003336310104, -14.73248082605, 
     2.78973679892}, {-6.003336310119216, -14.732480826091791`, 
     3.78056179892}, {0.007912114291800002, 3.5108185677000003`, 
     0.031490876754}, {-0.004984857134699998, 5.2635686641, 
     0.15509636349900002`}, {0.0361282342483, 6.725310489150001, 
     0.299062052834}, {2.7041830334253, 6.6122678833, 
     0.000923509754999996}, {-3.0681437299847, 6.40082346484, 
     0.046266615250000004`}, {0.041148812384899994`, 
     8.17111478883, -0.018048750006000064`}, {0.0372025465289, 
     9.66362744163, -0.14131560696600004`}, {7.170283033425299, 
     6.61226788309949, 0.0009235097549999856}, {10.5844230334253, 
     6.612267882946208, 0.0009235097550000237}, {12.2914930334253, 
     6.612267882869563, 0.0009235097550000237}, {12.619791033425301`, 
     6.612267882854824, 0.0009235097549999853}, {12.560216320849301`, 
     6.612267882845436, 0.269646797179}, {12.884473033425301`, 
     6.612267882842943, 0.0009235097549999853}, {-7.4724537299847, 
     6.400823464642264, 0.04626661525000001}, {-10.5193337299847, 
     6.400823464505473, 0.046266615250000045`}, {-12.042773729984699`, 
     6.400823464437069, 0.046266615250000045`}, {-12.543262729984699`, 
     6.400823464414605, 0.04626661525000001}, {-12.452441827290698`, 
     6.40082346440029, 0.45593471255600004`}, {-12.946769729984698`, 
     6.400823464396489, 0.04626661525000001}}], 
   {RGBColor[1, 0, 0], PointSize[Large], 
    Point3DBox[{-0.0935977802365171, 
     1.7627511757454555`, -0.030609949258450453`}]}},
  ImageSize->{339.34559573877914`, 322.5754940825847},
  ViewPoint->{1.8878878513636073`, 1.8319209533399108`, 2.128366763832751},
  ViewVertical->{0.04543063964309324, 1.0568737553510485`, 
   0.2543672006325849}]], "Output",
 CellChangeTimes->{{3.682368368125785*^9, 3.682368415907424*^9}, 
   3.682368608183104*^9, {3.68236868449067*^9, 3.682368699665056*^9}, {
   3.682368788794688*^9, 3.682368817081644*^9}, 3.682368855903887*^9, 
   3.682368921211833*^9, {3.682369040149406*^9, 3.6823690467421427`*^9}, {
   3.6823691067492647`*^9, 3.682369140607853*^9}, 3.682369992157607*^9, {
   3.682370048904627*^9, 3.6823700653736486`*^9}, 3.682426823754067*^9, 
   3.682426897860105*^9, 3.6824270004019403`*^9, {3.682433211083358*^9, 
   3.682433228737409*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lowerback", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "/@", "#"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Select", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringTrim", "/@", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "Whitespace"}], "]"}]}], "&"}], "/@", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"raw$acm", ",", "\"\<\\n\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<lowerback\>\""}], 
         "&"}]}], "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lfemur", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "/@", "#"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Select", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringTrim", "/@", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "Whitespace"}], "]"}]}], "&"}], "/@", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"raw$acm", ",", "\"\<\\n\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<lfemur\>\""}], "&"}]}], 
       "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lfoot", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "/@", "#"}], "&"}], "/@", 
    RowBox[{
     RowBox[{"Select", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "/@", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "Whitespace"}], "]"}]}], "&"}], "/@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"raw$acm", ",", "\"\<\\n\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<lfoot\>\""}], "&"}]}], 
      "\[IndentingNewLine]", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6823703651361017`*^9, 3.682370413332361*^9}, {
  3.682370447206438*^9, 3.6823705404418163`*^9}, {3.6823705741139193`*^9, 
  3.682370579601812*^9}, {3.682371094410617*^9, 3.682371100708563*^9}, {
  3.68237122793605*^9, 3.682371234521207*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lowerbackM", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rot", "=", "#"}], ",", "\[IndentingNewLine]", "m"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{"Dot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"rot", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "Degree"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"rot", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"rot", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "Degree"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "lowerback"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682370594177326*^9, 3.682370681941298*^9}, {
   3.682370770609638*^9, 3.682370773664871*^9}, 3.682370843514982*^9, 
   3.682370903254477*^9, {3.6823710192048283`*^9, 3.682371023515191*^9}, 
   3.682371119834495*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lfemurM", "=", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rot", "=", "#"}], ",", "\[IndentingNewLine]", "m"}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"m", "=", 
          RowBox[{"Dot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
             RowBox[{"RotationTransform", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"rot", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "Degree"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
             RowBox[{"RotationTransform", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"rot", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
             RowBox[{"RotationTransform", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"rot", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "Degree"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}],
         "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
      "lfemur"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lfootM", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rot", "=", "#"}], ",", "\[IndentingNewLine]", "m"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{"Dot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"rot", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "Degree"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"rot", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "lfoot"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6823708914494343`*^9, 3.68237090499089*^9}, {
  3.6823711208099194`*^9, 3.682371132030959*^9}, {3.682371242046595*^9, 
  3.682371245645378*^9}, {3.682371283662352*^9, 3.682371296652787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"Point", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
         "\"\<$$offset\>\"", "]"}], "+", 
        RowBox[{
         RowBox[{"Dot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
            "\"\<$$rotInv\>\"", "]"}], ",", "\[IndentingNewLine]", "#", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
            "\"\<$$rot\>\"", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
            "\"\<$$trans\>\"", "]"}]}], "\[IndentingNewLine]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], "&"}], "/@", 
      "M"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Point", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Normal", "[", "pos", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", "]"}],
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "Red", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Point", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
          "\"\<$$offset\>\"", "]"}], "+", 
         RowBox[{
          RowBox[{"Dot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
             "\"\<$$rotInv\>\"", "]"}], ",", "\[IndentingNewLine]", "#", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
             "\"\<$$rot\>\"", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
             "\"\<$$trans\>\"", "]"}]}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], "&"}], "/@",
        "lowerbackM"}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "Blue", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Point", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"bones", "[", "\"\<lfemur\>\"", "]"}], "[", 
          "\"\<$$offset\>\"", "]"}], "+", 
         RowBox[{
          RowBox[{"Dot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfemur\>\"", "]"}], "[", 
             "\"\<$$rotInv\>\"", "]"}], ",", "\[IndentingNewLine]", "#", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfemur\>\"", "]"}], "[", 
             "\"\<$$rot\>\"", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfemur\>\"", "]"}], "[", 
             "\"\<$$trans\>\"", "]"}]}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], "&"}], "/@",
        "lfemurM"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\[IndentingNewLine]", "Green", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Point", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"bones", "[", "\"\<lfoot\>\"", "]"}], "[", 
          "\"\<$$offset\>\"", "]"}], "+", 
         RowBox[{
          RowBox[{"Dot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfoot\>\"", "]"}], "[", 
             "\"\<$$rotInv\>\"", "]"}], ",", "\[IndentingNewLine]", "#", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfoot\>\"", "]"}], "[", 
             "\"\<$$rot\>\"", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bones", "[", "\"\<lfoot\>\"", "]"}], "[", 
             "\"\<$$trans\>\"", "]"}]}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], "&"}], "/@",
        "lfootM"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682369175005962*^9, 3.6823692146268787`*^9}, {
   3.682369854214036*^9, 3.682369949153863*^9}, {3.682370010769494*^9, 
   3.682370041053136*^9}, {3.682370082064176*^9, 3.682370101757037*^9}, {
   3.682370252868083*^9, 3.682370301056262*^9}, {3.682370696386175*^9, 
   3.682370825388709*^9}, {3.682370863183271*^9, 3.682370879974245*^9}, {
   3.682370916085088*^9, 3.682370932805593*^9}, 3.682371001910131*^9, 
   3.68237103864889*^9, {3.682371150163591*^9, 3.682371184418901*^9}, {
   3.68237133760087*^9, 3.6823714028684473`*^9}, 3.682371444277051*^9}],

Cell[BoxData[
 Graphics3DBox[{
   Point3DBox[{{0, 0, 0}, {1.2836631626, -1.5847179901, 
     0.8754403622999999}, {-1.2179465779999998`, -1.584718958, 0.87544022}, {
     0.011796664935000001`, 1.7643047565, -0.06386537355}, {
     3.4695300835999996`, -7.59034293775, 0.8754403622999999}, {
     5.860376431, -14.15914469416, 0.8754403622999999}, {
     5.980409706292, -14.488932599710001`, 2.9064519729700002`}, {
     5.980409706307981, -14.488932599753905`, 
     3.9471919729700002`}, {-3.4450850524, -7.703736659960001, 
     0.87544022}, {-5.8481415138, -14.30608545647, 
     0.87544022}, {-6.003336310104, -14.73248082605, 
     2.78973679892}, {-6.003336310119216, -14.732480826091791`, 
     3.78056179892}, {0.007912114291800002, 3.5108185677000003`, 
     0.031490876754}, {-0.004984857134699998, 5.2635686641, 
     0.15509636349900002`}, {0.0361282342483, 6.725310489150001, 
     0.299062052834}, {2.7041830334253, 6.6122678833, 
     0.000923509754999996}, {-3.0681437299847, 6.40082346484, 
     0.046266615250000004`}, {0.041148812384899994`, 
     8.17111478883, -0.018048750006000064`}, {0.0372025465289, 
     9.66362744163, -0.14131560696600004`}, {7.170283033425299, 
     6.61226788309949, 0.0009235097549999856}, {10.5844230334253, 
     6.612267882946208, 0.0009235097550000237}, {12.2914930334253, 
     6.612267882869563, 0.0009235097550000237}, {12.619791033425301`, 
     6.612267882854824, 0.0009235097549999853}, {12.560216320849301`, 
     6.612267882845436, 0.269646797179}, {12.884473033425301`, 
     6.612267882842943, 0.0009235097549999853}, {-7.4724537299847, 
     6.400823464642264, 0.04626661525000001}, {-10.5193337299847, 
     6.400823464505473, 0.046266615250000045`}, {-12.042773729984699`, 
     6.400823464437069, 0.046266615250000045`}, {-12.543262729984699`, 
     6.400823464414605, 0.04626661525000001}, {-12.452441827290698`, 
     6.40082346440029, 0.45593471255600004`}, {-12.946769729984698`, 
     6.400823464396489, 0.04626661525000001}}], 
   {RGBColor[1, 0, 0], Point3DBox[CompressedData["
1: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
GG64JlnVg7Ml06cJ7m6oidtKPMyN92Xn5inL8DpQW1R/uputG+j0ZhnkMA86
tu9WclkdvKgxIv1i6oa2un79nZiLyW2aeWbVw/ys9drIahfQyaw+68Prv0/d
/m7hBECd60K5wmgX7IiDQEfMuReUNn3TScBVGP5qV0UXiF6uPkLAXF1HpkOr
txF6NEm+if5dUGEgJ+eL5Zckl1lx0FNgXnkjW8usCz7oGupN4+e1eCiwLK1M
BV/7YxJJZ7pghkcFCWEu5aRVmmzcBA9ni9xI+/E6RVetTDlYiCdvS7s5WTaD
iwycObjWCfylWTL9tHl6X3S/XNJsgYFJsRG32k5ITZJreYk5Q3W+kS99K8xq
mktGp3VC82Ad027MK7I9syhRrbBL6Lc2i1AnqKb8SKBiLs3w/kvSYiuIopZE
HvsOUH9SPPQN31el0bVhi1AbnGRevSpb1g7Xz/q9MMbP9V2+0ED8eBsk6Uta
sX5og3kGBeEVrIebqb5dV5TaQNVPJVWOrw1EHm0yuOP+KE+QmJiOr99y0OCr
yINW4A2v+F3Di69ntGu9otoGlgIrrMQfLTBy0GrICceTsZ7X5x4btwGdHE/T
rYIWOOW5XNSM+an5qScErzYwYtFyeJLbAvuiP5yMxny+hlxAzWsDDa8Bv8Iv
LcC0uqm5hNev4MrZXz/QBpvH+TrQsVZ4x9vEp4W5FesDzWvf8fqPOeJ3/2oF
AY2e+RJsD6HSVze897TDu8yz72NW20CfjqAVSZsnuTPybc7xdjD0W36kcLgD
Lt32aPqD9Tb3KNa8+lY7zPQm7Dd/0gmb3nz6tO8yG22YKHa5tkPMsNhaTlkX
tC9aftLcyUIssuT9E+HXDn+MeGV2dXbD9pwdwR9xHFCcd3XVfNYOAeKCslbh
PcDwX8e8Na43RH8On8qTboftD8Y6biz1gGw+vawK5kTTsvPpWXhf9Pu/cQ30
wNOtMTf+w+vkTVRtyk62QoDMwIKAfA/ImzqFHcD3Fag4Meg80gLHnOs+vRHv
BmGveJNmLOfW4R2xWRXNoJMzqPartxMe2pWXfMN2OPF3WFA2sAkK02SPLmp0
AIe9yCHaeVHyweSbIp44f6z5ro5S20DtT5zOm30sxAeKM+JSNRRoH1/al22A
7etak+F7nC/ESf1R1ecocOL2Px0FoRY4oS6SSJt/rudBcS46SgGHzPPXzoo0
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
5ZVR+ASOn8MV9t+r7e6A/wHRyn3c
     "]]}, 
   {RGBColor[0, 0, 1], Point3DBox[CompressedData["
1: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
K/4/VZ2Oew==
     "]]}, 
   {RGBColor[0, 1, 0], Point3DBox[CompressedData["
1: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
JfYBdbF28qsOHWclVeyWrClHOf57UhP39kJ8yYX2iBN07NsmvpijVo/O+71I
W/7bDdG/QwMdyZ56cXpS21Y0o56uRxkqY11QNOnc3alNx9drvMZwdxvycs35
wqPWCRM+KlUFGsQ3icwaPFvsQHbnHyRtbGiHJEodVUeNjuW/1azZuK8bReYb
6EtH/IJVL4TWS+4m+f8y79Da1YMOlEoJPQ9sA+3vJh9idxJ/Zzc6fG2iB3VJ
mEe8yWqFyn2JK7WJTy9LDjj16kIv4hZ3WDW4qhUEdm7b/1iajls7hLhWePei
3cypiy6eLRBsFEW/Qvyg6kbDiYNPepG/F+9liZ0tkHaQ1jlC4ibt71ot3XvR
f88eSmxJaQb6bMzgMIk7Q0Si++dedH2KQ0dSspn413EVERKPqxVe6F3Vh66t
sHmy7lITDFaf32G9hY6dDK6J8hT1IanmLpHIGz/BcE+r4MhGOhZie5jyrqkf
ZZesv9B7vBH05ud72YTomC81aevJXQxklJZyQXN1A3Rfp7f4E/9It+2UX5E1
iPL2lYUkNtZBOXP1mu45Gq7ZYWzCuX8YnaSV7Lv4tRbW4HLN5p803JQnvPDm
4wiav9m2u/hUDcyEjzlFptCwv2/4n69Fo8ioWCJXPfcHbKpboygZSHz3sfWD
vQVjSIyp6KlyvApCz6oFuT2g4QsXb2n+DBlHS3fkU+RWfwe19trQZ5dpOD11
k4bFyQnUzpvKzr+2EgKjXF2UTtHwq9vVu3VaJ5Ci2YX+tCMVUPjMcgPnARqe
Glvl8l6D8OAOPz/OmHIYO7ifdUqZho+/OTFQ4TuJrp6VSE8VLgety4F5H2Vo
+P6mU6qtpZPISLp9VDauDMw/dh+s+Y+GBQf8TKWHJtHC+Z0OlafLIGdo44Xb
G4mfFXeQsJufRJ506WfZ1DLQtF+fs3MDDVs9EFh34d8kknBmTH/sKAWzmRtz
58Ro+PC2ndfeszERdSzLwyyzFJL5eOLSiP+dUlJwi+dkoqfMt1/CgktB0o7H
IJDw9eKFzTpAZaKJA2qz+e6lsDM+nG29MA1fk5a6NLyBiWJrbSnBLqXQmW37
7rYA8eP6jvfyFZno77GujACvUhia+y//CY2GvQ0/XMk5ykRioycfmr4vhSmh
Ed9XvDTcvS9h/I0lE2VcqXJVriR7TNmeoEpwgOJ8eV/8EyZSDHs2xMdRBnIP
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
mPiXsqjhxe3dIHGOIXOS+I7/ASy/Y18=
     "]]}},
  ImageSize->{246.67904986706642`, 293.07013913683465`},
  ViewPoint->{0.9584692061299958, -0.15235671232751732`, 3.241623700109144},
  ViewVertical->{0.3027982677714849, 0.9433851973317203, 
   0.9322520014817421}]], "Output",
 CellChangeTimes->{3.6823709332398367`*^9, 3.682371040392992*^9, 
  3.68237118515303*^9, 3.682371353232486*^9, 3.682371383319137*^9, 
  3.682371445535233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hierarchy", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682370216697158*^9, 3.682370220188616*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"root\"\>", ",", 
     RowBox[{"{", "\<\"root\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhipjoint\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhipjoint\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lowerback\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfemur\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", 
       ",", "\<\"lfemur\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ltibia\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfoot\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>", ",", "\<\"lfoot\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ltoes\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>", ",", "\<\"lfoot\"\>", ",", "\<\"ltoes\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfemur\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", 
       ",", "\<\"rfemur\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rtibia\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfoot\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>", ",", "\<\"rfoot\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rtoes\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>", ",", "\<\"rfoot\"\>", ",", "\<\"rtoes\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"upperback\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"thorax\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lowerneck\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lclavicle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rclavicle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"upperneck\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>", ",", "\<\"upperneck\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"head\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>", ",", "\<\"upperneck\"\>", 
       ",", "\<\"head\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhumerus\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lradius\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lwrist\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhand\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lhand\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lthumb\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lthumb\"\>"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfingers\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lhand\"\>", 
       ",", "\<\"lfingers\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhumerus\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rradius\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rwrist\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhand\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rhand\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rthumb\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rthumb\"\>"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfingers\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rhand\"\>", 
       ",", "\<\"rfingers\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682370220648013*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lowerback1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3.45988", "Degree"}], ",", 
      RowBox[{"0.897008", "Degree"}], ",", 
      RowBox[{"0.924903", "Degree"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "=", 
    RowBox[{"Dot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
       RowBox[{"RotationTransform", "[", 
        RowBox[{
         RowBox[{"3.45988", "Degree"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
       RowBox[{"RotationTransform", "[", 
        RowBox[{
         RowBox[{"0.897008", "Degree"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
       RowBox[{"RotationTransform", "[", 
        RowBox[{
         RowBox[{"0.924903", "Degree"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mb", "=", 
   RowBox[{
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"3.45988", "Degree"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], "*", "\[IndentingNewLine]", 
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"0.897008", "Degree"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], "*", "\[IndentingNewLine]", 
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"0.924903", "Degree"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.682369529961836*^9, 3.682369562693578*^9}, 
   3.682369696207355*^9, {3.6823697287635393`*^9, 3.682369846557428*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682369172221857*^9, 3.682369173177965*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"hierarchy", ",", "bones", ",", "pos"}], "}"}], "=", 
    RowBox[{"ParseAFS", "[", "raw$afs", "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"lowerback", " ", "3.45988", " ", "0.897008", " ", "0.924903"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lowerback1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3.45988", "Degree"}], ",", 
      RowBox[{"0.897008", "Degree"}], ",", 
      RowBox[{"0.924903", "Degree"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Point", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Normal", "[", "pos", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"(", 
          RowBox[{"pos", "/@", "#"}], ")"}], "]"}], "&"}], "/@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"hierarchy", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.68235745090414*^9, 3.682357451136141*^9}, {
   3.682357900122789*^9, 3.682357904865534*^9}, 3.682358620869173*^9, {
   3.682359711375964*^9, 3.682359719581629*^9}, {3.6823598576597567`*^9, 
   3.682359892424485*^9}, {3.682359943479167*^9, 3.6823600748772297`*^9}, {
   3.682360118462225*^9, 3.6823601705431128`*^9}, {3.682360313055725*^9, 
   3.682360385806487*^9}, {3.682360424497054*^9, 3.682360456812829*^9}, {
   3.682360500992813*^9, 3.682360760700172*^9}, {3.682364614399146*^9, 
   3.682364618486636*^9}, {3.6823678669563932`*^9, 3.682367955509849*^9}, 
   3.682367986963195*^9, {3.682368020568246*^9, 3.682368026556876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "pos"}]], "Input",
 CellChangeTimes->{{3.6823680297419643`*^9, 3.6823680303727837`*^9}, {
  3.682368074959976*^9, 3.68236807524433*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"root\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
           TemplateBox[{"29"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"\<\"rfingers\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Association", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"11\"\>"}], ",", 
                   RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"lowerback\"\>"}], 
                   ",", 
                   TemplateBox[{"6"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   ",", 
                   RowBox[{"Inverse", "[", 
                    RowBox[{"\<\"$$rotInv\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.9998477020265135`", ",", 
                    RowBox[{"-", "0.0006333910047561864`"}], ",", 
                    RowBox[{"-", "0.01744051513387357`"}], ",", "0.`"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.0006312610784074011`", ",", "0.999999792609982`", ",", 
                    
                    RowBox[{"-", "0.00012763010471361562`"}], ",", "0.`"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.017440592356645083`", ",", "0.00011660114851592227`", 
                    ",", "0.9998478945031696`", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], 
                    "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
                "[", "\<\"$$offset\"\>", "]"}], "+", 
               TemplateBox[{"7"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "+", 
               RowBox[{
                RowBox[{"Association", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\<\"id\"\>", "\[Rule]", "\<\"29\"\>"}], ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   ",", 
                   RowBox[{"Inverse", "[", 
                    RowBox[{"\<\"$$rotInv\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "}"}]}], "]"}]}], "}"}], "]"}], "[", "\<\"$$offset\"\>", 
                "]"}]}], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 756, 33325943607416338848, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 756, 33325943607416338848, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 756, 33325943607416338848, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[756]]], "Output",
 CellChangeTimes->{3.6823680308233767`*^9, 3.6823680757293043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
   RowBox[{"TranslationTransform", "[", 
    RowBox[{
     RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
     "\"\<$$offset\>\"", "]"}], "]"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682367812646912*^9, 3.682367850259987*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0", ",", "0", ",", "0.011796664935000001`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1.`", ",", "0", ",", "1.7643047565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1.`", ",", 
     RowBox[{"-", "0.06386537355`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6823663198492947`*^9, {3.68236782810312*^9, 3.6823678507068644`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682365774714025*^9, 3.682365774909032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cinv", "=", 
  RowBox[{
   RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", "\"\<$$rotInv\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
        "\"\<$$offset\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dot", "[", 
   RowBox[{"Cinv", ",", "M"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682365859259885*^9, 3.682365969488884*^9}, {
  3.682366017665667*^9, 3.682366096904777*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9998478945031696`", ",", "0.0001166011485159223`", ",", 
     RowBox[{"-", "0.017440592356645086`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00012763010471361562`"}], ",", "0.9999997926099822`", 
     ",", 
     RowBox[{"-", "0.0006312610784074012`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01744051513387357`", ",", "0.0006333910047561865`", ",", 
     "0.9998477020265137`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6823658817929907`*^9, 3.6823659710537443`*^9}, {
   3.682366040498757*^9, 3.682366097528421*^9}, 3.682366324848974*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0.011796664935000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1.7643047565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "0.06386537355`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6823658817929907`*^9, 3.6823659710537443`*^9}, {
   3.682366040498757*^9, 3.682366097528421*^9}, 3.68236632486339*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.013114440504149538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "1.7643432007158042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     RowBox[{"-", "0.06253241230728863`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6823658817929907`*^9, 3.6823659710537443`*^9}, {
   3.682366040498757*^9, 3.682366097528421*^9}, 3.682366324873404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hierarchy", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682364710149867*^9, 3.682364714065649*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"root\"\>", ",", 
     RowBox[{"{", "\<\"root\"\>", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhipjoint\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhipjoint\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lowerback\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfemur\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", 
       ",", "\<\"lfemur\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ltibia\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfoot\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>", ",", "\<\"lfoot\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ltoes\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lhipjoint\"\>", ",", "\<\"lfemur\"\>",
        ",", "\<\"ltibia\"\>", ",", "\<\"lfoot\"\>", ",", "\<\"ltoes\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfemur\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", 
       ",", "\<\"rfemur\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rtibia\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfoot\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>", ",", "\<\"rfoot\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rtoes\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"rhipjoint\"\>", ",", "\<\"rfemur\"\>",
        ",", "\<\"rtibia\"\>", ",", "\<\"rfoot\"\>", ",", "\<\"rtoes\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"upperback\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"thorax\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lowerneck\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lclavicle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rclavicle\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"upperneck\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>", ",", "\<\"upperneck\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"head\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lowerneck\"\>", ",", "\<\"upperneck\"\>", 
       ",", "\<\"head\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhumerus\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lradius\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lwrist\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lhand\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lhand\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lthumb\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lthumb\"\>"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lfingers\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"lclavicle\"\>", ",", "\<\"lhumerus\"\>", 
       ",", "\<\"lradius\"\>", ",", "\<\"lwrist\"\>", ",", "\<\"lhand\"\>", 
       ",", "\<\"lfingers\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhumerus\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rradius\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rwrist\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rhand\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rhand\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rthumb\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rthumb\"\>"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"rfingers\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"root\"\>", ",", "\<\"lowerback\"\>", 
       ",", "\<\"upperback\"\>", ",", "\<\"thorax\"\>", 
       ",", "\<\"rclavicle\"\>", ",", "\<\"rhumerus\"\>", 
       ",", "\<\"rradius\"\>", ",", "\<\"rwrist\"\>", ",", "\<\"rhand\"\>", 
       ",", "\<\"rfingers\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682364714874917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"l", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", 
      "\"\<$$rotInv\>\"", "]"}], "*", "\[IndentingNewLine]", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "*", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "*", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], "*", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bones", "[", "\"\<lowerback\>\"", "]"}], "[", "\"\<$$rot\>\"", 
      "]"}], "*", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"l", "*", "lowerback1"}]}], "Input",
 CellChangeTimes->{{3.6823645392469873`*^9, 3.682364635931342*^9}, {
  3.682364691079256*^9, 3.68236477440711*^9}, {3.6823648044407063`*^9, 
  3.6823648697992067`*^9}, {3.6823649861289463`*^9, 3.6823649925407124`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.017622996357860896`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.004570325671056135`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.0047110213290349435`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682360503928143*^9, 3.68236055557708*^9}, {
   3.682360591751149*^9, 3.682360701418727*^9}, {3.682360736940239*^9, 
   3.682360761104245*^9}, {3.682364552067053*^9, 3.682364584221531*^9}, {
   3.682364735392109*^9, 3.682364761563265*^9}, {3.6823648132825813`*^9, 
   3.6823648220945873`*^9}, {3.6823648534817677`*^9, 3.682364870568082*^9}, 
   3.682364993150929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Dot", "[", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "*", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "*", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.682364877639812*^9, 3.682364877775373*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "1", "]"}], "2"], ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "1", "]"}], "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "1", "]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682364878258759*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"lowerback1$local", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68236046605973*^9, 3.6823604787320538`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.0007121399564059956`", ",", 
     RowBox[{"-", "2.829960695157901`*^-10"}], ",", 
     RowBox[{"-", "2.1668151061373382`*^-7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.097311787688437`*^-8"}], ",", "0.02762149055598793`", 
     ",", 
     RowBox[{"-", "3.401303426299807`*^-10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1359073210943216`*^-7", ",", "1.2695128469124945`*^-11", ",", 
     RowBox[{"-", "0.001030639742367783`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68235577948482*^9, 3.6823559063971043`*^9, {3.682355941550872*^9, 
   3.682355993523587*^9}, {3.6823560245769787`*^9, 3.682356039297181*^9}, {
   3.6823560778673058`*^9, 3.682356139024551*^9}, {3.682356181648061*^9, 
   3.6823562369236813`*^9}, 3.682356268176544*^9, 3.682356407719146*^9, {
   3.682356444605641*^9, 3.68235646337076*^9}, {3.682356512398858*^9, 
   3.682356527198061*^9}, {3.6823566013863783`*^9, 3.682356638464333*^9}, {
   3.6823566703820343`*^9, 3.682356712459469*^9}, 3.6823567447217197`*^9, {
   3.682356835865555*^9, 3.682356911674664*^9}, 3.682356966031816*^9, 
   3.6823570213216553`*^9, {3.682357086758471*^9, 3.68235712085544*^9}, {
   3.6823571786619253`*^9, 3.6823572042809153`*^9}, {3.682357249815134*^9, 
   3.682357362065386*^9}, 3.682357451723167*^9, {3.6823578871250668`*^9, 
   3.6823579194315023`*^9}, 3.682357988553474*^9, {3.682358126133507*^9, 
   3.682358146817686*^9}, 3.682358210906294*^9, 3.682359115749761*^9, 
   3.682359157936969*^9, 3.6823595019192553`*^9, {3.682359580226516*^9, 
   3.6823596002796097`*^9}, {3.682359717335091*^9, 3.6823597199574823`*^9}, 
   3.6823598618266068`*^9, 3.682359893130474*^9, {3.6823599720884857`*^9, 
   3.6823600090910892`*^9}, {3.682360046266955*^9, 3.682360075698626*^9}, {
   3.682360128038705*^9, 3.6823601709922123`*^9}, {3.682360314097506*^9, 
   3.682360386970203*^9}, {3.6823604249367123`*^9, 3.682360479182111*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.682359512756948*^9, 3.6823595586073523`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6823595459844713`*^9, 3.68235955626475*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"90", "Degree"}], "]"}]], "Input",
 CellChangeTimes->{{3.682359126737176*^9, 3.6823591433580093`*^9}}],

Cell[BoxData["1.5707963267948966`"], "Output",
 CellChangeTimes->{{3.682359128857428*^9, 3.6823591437313557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<$$rotInv\>\"", "]"}], "&"}], "/@", 
   RowBox[{"Normal", "[", "bones", "]"}]}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.6823579342402067`*^9, 3.682357938848468*^9}, {
   3.6823594148489923`*^9, 3.6823594600788927`*^9}, {3.682359492849807*^9, 
   3.682359498125342*^9}, 3.682359582926861*^9, {3.682359618667096*^9, 
   3.6823596197471313`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.999898647767111`", ",", "0.0067583866551186676`", ",", 
       "0.012530698437153277`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.006884001854221371`"}], ",", "0.9999262153765317`", 
       ",", "0.010008712266693112`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.012462131116869151`"}], ",", 
       RowBox[{"-", "0.01009395921263259`"}], ",", "0.9998713953681442`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.999865510930738`", ",", 
       RowBox[{"-", "0.00009789717968181737`"}], ",", 
       "0.01639970936804651`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3552527156068805`*^-20"}], ",", "0.9999821833333178`", 
       ",", "0.005969339656173365`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.016400001561407918`"}], ",", 
       RowBox[{"-", "0.005968536845238898`"}], ",", "0.9998476966602028`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.999865510930738`", ",", 
       RowBox[{"-", "0.00009789717968181737`"}], ",", 
       "0.01639970936804651`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3552527156068805`*^-20"}], ",", "0.9999821833333178`", 
       ",", "0.005969339656173365`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.016400001561407918`"}], ",", 
       RowBox[{"-", "0.005968536845238898`"}], ",", "0.9998476966602028`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9998482120167008`", ",", "0.01719472730161542`", ",", 
       "0.002809676143195395`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01719750720126956`"}], ",", "0.9998516431099603`", ",",
        "0.0009682542923719982`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0027926104398648165`"}], ",", 
       RowBox[{"-", "0.0010164267487114765`"}], ",", "0.9999955840920477`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9998476951563913`", ",", "0.01745240643728351`", ",", 
       "7.408759802631925`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`", ",",
        "2.5511456507600337`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.363107781851079`*^-13"}], ",", 
       RowBox[{"-", "2.680057786192412`*^-13"}], ",", "1.`"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.999895148327518`", ",", "0.007125525969024047`", ",", 
       "0.012606317097220923`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.007001815717811724`"}], ",", "0.9999271660328706`", 
       ",", 
       RowBox[{"-", "0.009830422479524974`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.012675445859800172`"}], ",", "0.00974112463409175`", 
       ",", "0.9998722136168794`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.999865510930738`", ",", "0.00009789717968181737`", ",", 
       "0.01639970936804651`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.3552527156068805`*^-20", ",", "0.9999821833333178`", ",", 
       RowBox[{"-", "0.005969339656173365`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.016400001561407918`"}], ",", "0.005968536845238898`", 
       ",", "0.9998476966602028`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.999865510930738`", ",", "0.00009789717968181737`", ",", 
       "0.01639970936804651`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.3552527156068805`*^-20", ",", "0.9999821833333178`", ",", 
       RowBox[{"-", "0.005969339656173365`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.016400001561407918`"}], ",", "0.005968536845238898`", 
       ",", "0.9998476966602028`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9998486434798276`", ",", "0.01698709183415596`", ",", 
       "0.0037588352672581387`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.016981779020238372`"}], ",", "0.9998547610148475`", 
       ",", 
       RowBox[{"-", "0.0014408529591391967`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.00378276523937498`"}], ",", "0.001376803166767165`", 
       ",", "0.9999918975172667`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9998476951563913`", ",", "0.01745240643728351`", ",", 
       "7.313604078134847`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`", ",", 
       RowBox[{"-", "2.808317483658268`*^-13"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.361502078939243`*^-13"}], ",", 
       "2.680249772410132`*^-13", ",", "1.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998477020265136`", ",", 
       RowBox[{"-", "0.0006293232006599288`"}], ",", 
       RowBox[{"-", "0.01744066239019866`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.0006312610784074012`", ",", "0.9999997951782196`", ",", 
       "0.00010560762099400818`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.017440592356645083`", ",", 
       RowBox[{"-", "0.00011660114851592229`"}], ",", "0.9998478945031697`"}],
       "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998476960717521`", ",", "0.0009508202978945931`", ",", 
       RowBox[{"-", "0.017426433965970687`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0009513512828570595`"}], ",", "0.9999995472192863`", 
       ",", 
       RowBox[{"-", "0.000022180151073449348`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.01742640498627963`", ",", "0.00003875543325846179`", ",", 
       "0.9998481479241089`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998477033668436`", ",", "0.001225509235774394`", ",", 
       RowBox[{"-", "0.01740885404503908`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0012275532811783323`"}], ",", "0.9999992408606803`", 
       ",", 
       RowBox[{"-", "0.00010672865081385979`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.01740871003234617`", ",", "0.0001280826923042219`", ",", 
       "0.9998484487210216`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998478146331653`", ",", "0.0017184897798419075`", ",", 
       RowBox[{"-", "0.017360713296411236`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001709753942220286`"}], ",", "0.9999984041941687`", 
       ",", "0.0005180256492319685`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.017361575813867623`", ",", 
       RowBox[{"-", "0.000488264265310215`"}], ",", "0.9998491572648678`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998476974670638`", ",", 
       RowBox[{"-", "0.0037381405921049072`"}], ",", 
       RowBox[{"-", "0.017047233638467652`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0037386064231295308`", ",", "0.9999930113762672`", ",", 
       RowBox[{"-", "4.542892228397023`*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01704713148373591`", ",", 
       RowBox[{"-", "0.000059190696842961177`"}], ",", 
       "0.9998546853441443`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9998476964164383`", ",", 
       RowBox[{"-", "0.0014373729476538939`"}], ",", 
       RowBox[{"-", "0.017393042567390295`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0014363557187935252`", ",", "0.9999989659217282`", ",", 
       RowBox[{"-", "0.00007097692210510579`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.017393126601930636`", ",", "0.000045983515906628734`", ",", 
       "0.9998487270745139`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9999694341225706`", ",", 
       RowBox[{"-", "0.0007666746272979893`"}], ",", 
       RowBox[{"-", "0.0077809402132168835`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.0008879634533487225`", ",", "0.999877973299118`", ",", 
       "0.015596474991279145`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.007768033309101804`", ",", 
       RowBox[{"-", "0.01560290746187826`"}], ",", "0.9998480919305915`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "1.3675481609518643`*^-14"}], ",", 
       "7.834654218198944`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "4.179627226339881`*^-20", ",", "0.9998476951563913`", ",", 
       "0.01745240643728351`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835847663046261`*^-13"}], ",", 
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "1.3675439819612138`*^-14"}], ",", 
       "7.834654225493399`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4199496293978212`*^-29"}], ",", "0.9998476951563913`", 
       ",", "0.01745240643728351`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835847663046261`*^-13"}], ",", 
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "1.3676170864303231`*^-14"}], ",", 
       "7.835073040716574`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.68212707775144`*^-28"}], ",", "0.9998476951563913`", 
       ",", "0.01745240643728351`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.836266542066741`*^-13"}], ",", 
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "1.3675592120588982`*^-14"}], ",", 
       "7.834741478664894`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.34847693739846`*^-28"}], ",", "0.9998476951563913`", 
       ",", "0.01745240643728351`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835934929508861`*^-13"}], ",", 
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "1.3673368526318941`*^-14"}], ",", 
       "7.83346758236107`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.071273109290134`*^-27"}], ",", "0.9998476951563913`", 
       ",", "0.01745240643728351`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.834660839154905`*^-13"}], ",", 
       RowBox[{"-", "0.01745240643728351`"}], ",", "0.9998476951563912`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9999238465644986`", ",", "0.012340092221693572`", ",", 
       "0.0001523010727645664`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.012341032033694244`"}], ",", "0.9998476989283432`", 
       ",", "0.012340092221693574`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1080676578113097`*^-12"}], ",", 
       RowBox[{"-", "0.012341032033694245`"}], ",", "0.9999238465644987`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9999814007127729`", ",", 
       RowBox[{"-", "0.0006801989236840115`"}], ",", 
       RowBox[{"-", "0.006060986548821357`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005809866779430026`", ",", "0.9998660670604403`", ",", 
       RowBox[{"-", "0.01635574503247331`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.006071299943243379`", ",", "0.016351919474833578`", ",", 
       "0.9998478654507834`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.3675440532706274`*^-14", ",", 
       "7.834636769417782`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.11780381604239`*^-20"}], ",", "0.9998476951563913`", 
       ",", 
       RowBox[{"-", "0.01745240643728351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835830209753741`*^-13"}], ",", "0.01745240643728351`", 
       ",", "0.9998476951563912`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.3675257058439482`*^-14", ",", 
       "7.834549521687606`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.609276246650864`*^-28"}], ",", "0.9998476951563913`", 
       ",", 
       RowBox[{"-", "0.01745240643728351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835742943291143`*^-13"}], ",", "0.01745240643728351`", 
       ",", "0.9998476951563912`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.3676962829386057`*^-14", ",", 
       "7.835526757208347`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.68212707775144`*^-28"}], ",", "0.9998476951563913`", 
       ",", 
       RowBox[{"-", "0.01745240643728351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.836720327672258`*^-13"}], ",", "0.01745240643728351`", 
       ",", "0.9998476951563912`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.3671571374787661`*^-14", ",", 
       "7.832437994937432`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.34847693739846`*^-28"}], ",", "0.9998476951563913`", 
       ",", 
       RowBox[{"-", "0.01745240643728351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.83363109489623`*^-13"}], ",", "0.01745240643728351`", 
       ",", "0.9998476951563912`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.3675622580786063`*^-14", ",", 
       "7.834758929299193`*^-13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.071273109290134`*^-27"}], ",", "0.9998476951563913`", 
       ",", 
       RowBox[{"-", "0.01745240643728351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.835952382801382`*^-13"}], ",", "0.01745240643728351`", 
       ",", "0.9998476951563912`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9999238465644986`", ",", "0.012340092221720922`", ",", 
       RowBox[{"-", "0.0001523010705488559`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.012341032033694245`"}], ",", "0.9998476989283431`", 
       ",", 
       RowBox[{"-", "0.012340092221720922`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1079804608515875`*^-12"}], ",", 
       "0.012341032033694249`", ",", "0.9999238465644987`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6823579392243557`*^9, 3.682357991221549*^9, {3.6823581285411863`*^9, 
   3.68235814919425*^9}, 3.682358213432262*^9, 3.682359118288702*^9, 
   3.682359160250897*^9, {3.682359417229247*^9, 3.6823594604386673`*^9}, {
   3.6823594954972973`*^9, 3.682359504133275*^9}, {3.682359583188706*^9, 
   3.6823596204122057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "=", 
     RowBox[{
      RowBox[{"Dot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"axis", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"s", "\[IndentingNewLine]", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"axis", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"axis", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "MatrixForm"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"offset", "=", 
     RowBox[{"dir", "*", "len"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.682354317994381*^9, 3.682354321964012*^9}, 
   3.682354555881607*^9, {3.682357418738758*^9, 3.682357434887857*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"order\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"TX", ",", "TY", ",", "TZ", ",", "RX", ",", "RY", ",", "RZ"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"axis\"\>", "\[Rule]", 
    RowBox[{"{", "XYZ", "}"}]}], ",", 
   RowBox[{"\<\"position\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"orientation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.6823543222659283`*^9, {3.682354413030591*^9, 3.682354433346345*^9}, {
   3.682354480429337*^9, 3.6823545534794397`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682367226496745*^9, 3.6823673862797403`*^9}, {
  3.682367428075967*^9, 3.682367437989818*^9}, {3.6823674711887293`*^9, 
  3.68236753153129*^9}, {3.682367663616418*^9, 3.682367694565837*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.68236723434991*^9, 3.682367287736347*^9}, {
  3.6823673231449614`*^9, 3.682367386753749*^9}, {3.68236743248302*^9, 
  3.68236743845321*^9}, {3.6823674716931667`*^9, 3.682367532392902*^9}, {
  3.6823676660529423`*^9, 3.682367694985922*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"t", "=", 
   RowBox[{"RotationTransform", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682367411790954*^9, 3.682367411988159*^9}}],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0"},
      {
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.682367412454664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"m", "=", 
   RowBox[{"TransformationMatrix", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682367417553172*^9, 3.682367417723613*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682367418490732*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<name\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
         RowBox[{"Association", "[", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<id\>\"", "\[Rule]", " ", 
             RowBox[{
              RowBox[{"#", "[", "\"\<id\>\"", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<name\>\"", "\[Rule]", 
             RowBox[{
              RowBox[{"#", "[", "\"\<name\>\"", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<direction\>\"", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}], "/@", 
               RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<length\>\"", "\[Rule]", " ", 
             RowBox[{"Internal`StringToDouble", "[", 
              RowBox[{
               RowBox[{"#", "[", "\"\<length\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<axis\>\"", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}], "/@", 
               RowBox[{
                RowBox[{"#", "[", "\"\<axis\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<dof\>\"", "\[Rule]", 
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"#", ",", "\"\<dof\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                   "\"\<rx\>\""}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                   "\"\<ry\>\""}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"#", "[", "\"\<dof\>\"", "]"}], ",", 
                   "\"\<rz\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<$$offset\>\"", "\[Rule]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}], "/@", 
                 RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], "*", 
               RowBox[{"Internal`StringToDouble", "[", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<length\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<$$rot\>\"", "\[Rule]", 
             RowBox[{"Dot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "Degree"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "Degree"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
                 "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
               "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<$$rotInv\>\"", "\[Rule]", 
             RowBox[{"Dot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                 RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "Degree"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
                "//", "Inverse"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                 RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
                "//", "Inverse"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"TransformationMatrix", "[", "\[IndentingNewLine]", 
                 RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Internal`StringToDouble", "[", "#", "]"}], "&"}],
                     "/@", 
                    RowBox[{"#", "[", "\"\<direction\>\"", "]"}]}], ")"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "Degree"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
                "//", "Inverse"}]}], "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]"}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", "parsed"}], "\[IndentingNewLine]"}], "]"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"\"\<root\>\"", "\[Rule]", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<$$offset\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<$$rot\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"\"\<$$rotInv\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "|>"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"IdentityMatrix", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6823687411959877`*^9, 3.6823687435435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6823687439875317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hierarchy", " ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.68241892307798*^9, 3.682418931404071*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"root\"\>", GridBox[{
       {"\<\"root\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lhipjoint\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lhipjoint\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rhipjoint\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"rhipjoint\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lowerback\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lfemur\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lhipjoint\"\>"},
       {"\<\"lfemur\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"ltibia\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lhipjoint\"\>"},
       {"\<\"lfemur\"\>"},
       {"\<\"ltibia\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lfoot\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lhipjoint\"\>"},
       {"\<\"lfemur\"\>"},
       {"\<\"ltibia\"\>"},
       {"\<\"lfoot\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"ltoes\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lhipjoint\"\>"},
       {"\<\"lfemur\"\>"},
       {"\<\"ltibia\"\>"},
       {"\<\"lfoot\"\>"},
       {"\<\"ltoes\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rfemur\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"rhipjoint\"\>"},
       {"\<\"rfemur\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rtibia\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"rhipjoint\"\>"},
       {"\<\"rfemur\"\>"},
       {"\<\"rtibia\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rfoot\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"rhipjoint\"\>"},
       {"\<\"rfemur\"\>"},
       {"\<\"rtibia\"\>"},
       {"\<\"rfoot\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rtoes\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"rhipjoint\"\>"},
       {"\<\"rfemur\"\>"},
       {"\<\"rtibia\"\>"},
       {"\<\"rfoot\"\>"},
       {"\<\"rtoes\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"upperback\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"thorax\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lowerneck\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lowerneck\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lclavicle\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rclavicle\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"upperneck\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lowerneck\"\>"},
       {"\<\"upperneck\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"head\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lowerneck\"\>"},
       {"\<\"upperneck\"\>"},
       {"\<\"head\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lhumerus\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lradius\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"},
       {"\<\"lradius\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lwrist\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"},
       {"\<\"lradius\"\>"},
       {"\<\"lwrist\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lhand\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"},
       {"\<\"lradius\"\>"},
       {"\<\"lwrist\"\>"},
       {"\<\"lhand\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lthumb\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"},
       {"\<\"lradius\"\>"},
       {"\<\"lwrist\"\>"},
       {"\<\"lthumb\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"lfingers\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"lclavicle\"\>"},
       {"\<\"lhumerus\"\>"},
       {"\<\"lradius\"\>"},
       {"\<\"lwrist\"\>"},
       {"\<\"lhand\"\>"},
       {"\<\"lfingers\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rhumerus\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rradius\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"},
       {"\<\"rradius\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rwrist\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"},
       {"\<\"rradius\"\>"},
       {"\<\"rwrist\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rhand\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"},
       {"\<\"rradius\"\>"},
       {"\<\"rwrist\"\>"},
       {"\<\"rhand\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rthumb\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"},
       {"\<\"rradius\"\>"},
       {"\<\"rwrist\"\>"},
       {"\<\"rthumb\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"rfingers\"\>", GridBox[{
       {"\<\"root\"\>"},
       {"\<\"lowerback\"\>"},
       {"\<\"upperback\"\>"},
       {"\<\"thorax\"\>"},
       {"\<\"rclavicle\"\>"},
       {"\<\"rhumerus\"\>"},
       {"\<\"rradius\"\>"},
       {"\<\"rwrist\"\>"},
       {"\<\"rhand\"\>"},
       {"\<\"rfingers\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"root", {"root"}}, {"lhipjoint", {"root", "lhipjoint"}}, {
    "rhipjoint", {"root", "rhipjoint"}}, {
    "lowerback", {"root", "lowerback"}}, {
    "lfemur", {"root", "lhipjoint", "lfemur"}}, {
    "ltibia", {"root", "lhipjoint", "lfemur", "ltibia"}}, {
    "lfoot", {"root", "lhipjoint", "lfemur", "ltibia", "lfoot"}}, {
    "ltoes", {"root", "lhipjoint", "lfemur", "ltibia", "lfoot", "ltoes"}}, {
    "rfemur", {"root", "rhipjoint", "rfemur"}}, {
    "rtibia", {"root", "rhipjoint", "rfemur", "rtibia"}}, {
    "rfoot", {"root", "rhipjoint", "rfemur", "rtibia", "rfoot"}}, {
    "rtoes", {"root", "rhipjoint", "rfemur", "rtibia", "rfoot", "rtoes"}}, {
    "upperback", {"root", "lowerback", "upperback"}}, {
    "thorax", {"root", "lowerback", "upperback", "thorax"}}, {
    "lowerneck", {"root", "lowerback", "upperback", "thorax", "lowerneck"}}, {
    "lclavicle", {"root", "lowerback", "upperback", "thorax", "lclavicle"}}, {
    "rclavicle", {"root", "lowerback", "upperback", "thorax", "rclavicle"}}, {
    "upperneck", {
     "root", "lowerback", "upperback", "thorax", "lowerneck", "upperneck"}}, {
    "head", {"root", "lowerback", "upperback", "thorax", "lowerneck", 
      "upperneck", "head"}}, {
    "lhumerus", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus"}}, {
    "lradius", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus", 
      "lradius"}}, {
    "lwrist", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus", 
      "lradius", "lwrist"}}, {
    "lhand", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus", 
      "lradius", "lwrist", "lhand"}}, {
    "lthumb", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus", 
      "lradius", "lwrist", "lthumb"}}, {
    "lfingers", {
     "root", "lowerback", "upperback", "thorax", "lclavicle", "lhumerus", 
      "lradius", "lwrist", "lhand", "lfingers"}}, {
    "rhumerus", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus"}}, {
    "rradius", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus", 
      "rradius"}}, {
    "rwrist", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus", 
      "rradius", "rwrist"}}, {
    "rhand", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus", 
      "rradius", "rwrist", "rhand"}}, {
    "rthumb", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus", 
      "rradius", "rwrist", "rthumb"}}, {
    "rfingers", {
     "root", "lowerback", "upperback", "thorax", "rclavicle", "rhumerus", 
      "rradius", "rwrist", "rhand", "rfingers"}}}]]], "Output",
 CellChangeTimes->{
  3.682418881815734*^9, {3.6824189247429667`*^9, 3.682418931786284*^9}}]
}, Open  ]]
},
WindowSize->{1160, 751},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 397, 7, 68, "Text"],
Cell[958, 29, 597, 15, 46, "Input"],
Cell[CellGroupData[{
Cell[1580, 48, 90, 1, 28, "Input"],
Cell[1673, 51, 7732, 198, 669, "Output"]
}, Open  ]],
Cell[9420, 252, 21553, 443, 2783, "Input"],
Cell[CellGroupData[{
Cell[30998, 699, 1308, 30, 233, "Input"],
Cell[32309, 731, 2893, 47, 338, "Output"]
}, Open  ]],
Cell[35217, 781, 2860, 80, 267, "Input"],
Cell[38080, 863, 2197, 47, 352, "Input"],
Cell[40280, 912, 3813, 83, 692, "Input"],
Cell[CellGroupData[{
Cell[44118, 999, 5589, 126, 896, "Input"],
Cell[49710, 1127, 336267, 5517, 308, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386014, 6649, 136, 2, 46, "Input"],
Cell[386153, 6653, 8083, 192, 369, "Output"]
}, Open  ]],
Cell[394251, 6848, 2617, 63, 437, "Input"],
Cell[396871, 6913, 244, 4, 131, "Input"],
Cell[397118, 6919, 2269, 54, 233, "Input"],
Cell[CellGroupData[{
Cell[399412, 6977, 182, 3, 46, "Input"],
Cell[399597, 6982, 13824, 323, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413458, 7310, 374, 8, 80, "Input"],
Cell[413835, 7320, 541, 14, 28, "Output"]
}, Open  ]],
Cell[414391, 7337, 146, 2, 63, "Input"],
Cell[CellGroupData[{
Cell[414562, 7343, 968, 24, 182, "Input"],
Cell[415533, 7369, 660, 16, 28, "Output"],
Cell[416196, 7387, 467, 11, 28, "Output"],
Cell[416666, 7400, 492, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417195, 7416, 136, 2, 46, "Input"],
Cell[417334, 7420, 8083, 192, 369, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425454, 7617, 1486, 38, 114, "Input"],
Cell[426943, 7657, 725, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427705, 7677, 596, 17, 46, "Input"],
Cell[428304, 7696, 489, 16, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428830, 7717, 180, 3, 63, "Input"],
Cell[429013, 7722, 1991, 34, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431041, 7761, 650, 18, 97, "Input"],
Cell[431694, 7781, 327, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432058, 7795, 146, 3, 28, "Input"],
Cell[432207, 7800, 114, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432358, 7806, 494, 12, 46, "Input"],
Cell[432855, 7820, 16488, 449, 646, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449380, 8274, 1388, 38, 148, "Input"],
Cell[450771, 8314, 704, 18, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451512, 8337, 1160, 25, 216, "Input"],
Cell[452675, 8364, 631, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453343, 8383, 291, 7, 46, "Input"],
Cell[453637, 8392, 729, 20, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454403, 8417, 199, 4, 46, "Input"],
Cell[454605, 8423, 601, 18, 28, "Output"]
}, Open  ]],
Cell[455221, 8444, 10771, 235, 1168, "Input"],
Cell[CellGroupData[{
Cell[466017, 8683, 169, 3, 46, "Input"],
Cell[466189, 8688, 413, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466639, 8704, 141, 2, 28, "Input"],
Cell[466783, 8708, 22429, 616, 2434, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
